{"version":3,"file":"index.js","sources":["src/util.ts","src/costate.ts"],"sourcesContent":["export const isArray = Array.isArray\r\n\r\nexport const isFunction = (input: any) => typeof input === 'function'\r\n\r\nexport const isObject = (obj: any) => {\r\n  if (typeof obj !== 'object' || obj === null) return false\r\n\r\n  let proto = obj\r\n  while (Object.getPrototypeOf(proto) !== null) {\r\n    proto = Object.getPrototypeOf(proto)\r\n  }\r\n\r\n  return Object.getPrototypeOf(obj) === proto\r\n}\r\n\r\nexport const merge = <T = any>(target: object | Array<T>, source: object | Array<T>) => {\r\n  if (isArray(source) && isArray(target)) {\r\n    source.forEach((value, index) => {\r\n      target[index] = value\r\n    })\r\n  } else if (isObject(source) && isObject(target)) {\r\n    Object.assign(target, source)\r\n  }\r\n  return target\r\n}\r\n\r\ninterface deferred<T = any> {\r\n  promise: Promise<T>\r\n  resolve: (value?: T) => void\r\n  reject: (reason?: any) => void\r\n}\r\n\r\nconst noop = () => {}\r\n\r\nexport const createDeferred = <T>(): deferred<T> => {\r\n  let resolve: deferred<T>['resolve'] = noop\r\n  let reject: deferred<T>['reject'] = noop\r\n  let promise: Promise<T> = new Promise((a, b) => {\r\n    resolve = a\r\n    reject = b\r\n  })\r\n  return { resolve, reject, promise }\r\n}\r\n","import { isArray, isObject, merge, createDeferred } from './util'\n\nconst IMMUTABLE = Symbol('IMMUTABLE')\nconst PARENTS = Symbol('PARENTS')\n\nconst internalKeys = [IMMUTABLE, PARENTS]\n\nconst isCostate = (input: any) => !!(input && input[IMMUTABLE])\n\nexport const read = (input: any): any => {\n  if (!isCostate(input)) return input\n  return input[IMMUTABLE]()\n}\n\nexport type Costate<T> = T & AsyncIterableIterator<T>\n\nconst co = <T extends object>(state: T): Costate<T> => {\n  if (!isObject(state) && !isArray(state)) {\n    throw new Error(`Expect state to be array or object, instead of ${state}`)\n  }\n\n  if (isCostate(state)) return state as Costate<T>\n\n  let deferred = createDeferred<T>()\n\n  let target = (isArray(state) ? [] : {}) as T\n\n  let immutableTarget = (isArray(state) ? [] : {}) as T\n\n  let parents = new Map()\n\n  let copy = () => {\n    if (isArray(immutableTarget)) {\n      immutableTarget = [...immutableTarget] as T\n    } else {\n      immutableTarget = { ...immutableTarget } as T\n    }\n  }\n\n  let notifyParents = () => {\n    for (let [parent, key] of parents) {\n      parent[key] = proxy\n    }\n  }\n\n  let timer: NodeJS.Timeout | null = null\n\n  let notify = (key: string | number | symbol) => {\n    if (typeof key === 'symbol') {\n      if (internalKeys.indexOf(key) !== -1) return\n    }\n\n    notifyParents()\n    if (timer != null) clearTimeout(timer)\n    timer = setTimeout(doNotify, 0)\n  }\n\n  let doNotify = () => {\n    deferred.resolve(immutableTarget)\n    deferred = createDeferred<T>()\n  }\n\n  let handlers: ProxyHandler<T> = {\n    set(target, key, value) {\n      if (isObject(value) || isArray(value)) {\n        value = co(value)\n      }\n\n      if (isCostate(value)) {\n        value[PARENTS].set(proxy, key)\n      }\n\n      // copy before assigning\n      copy()\n\n      immutableTarget[key] = read(value)\n      target[key] = value\n\n      notify(key)\n\n      return true\n    },\n\n    deleteProperty(target, key) {\n      let value = target[key]\n\n      if (isCostate(value)) {\n        value[PARENTS].delete(proxy)\n      }\n\n      // copy before deleting\n      copy()\n\n      delete immutableTarget[key]\n      delete target[key]\n\n      notify(key)\n\n      return true\n    }\n  }\n\n  let proxy = new Proxy(target, handlers)\n\n  Object.defineProperties(proxy, {\n    [IMMUTABLE]: {\n      value: () => immutableTarget\n    },\n    [PARENTS]: {\n      value: parents\n    },\n    [Symbol.asyncIterator]: {\n      value: async function*() {\n        while (true) yield await deferred.promise\n      }\n    }\n  })\n\n  merge(proxy, state)\n\n  return proxy as Costate<T>\n}\n\nexport default co\n"],"names":["tslib_1.__spread","tslib_1.__assign","tslib_1.__values"],"mappings":"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"}E,KAAK,CAAC,CAAA;QAEnB,OAAO,KAAmB,CAAA;IAC5B,CAAC,CAAA;;;;;;;;;;;;;"}